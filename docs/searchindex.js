Search.setIndex({"docnames": ["index", "modules", "transport_company"], "filenames": ["index.rst", "modules.rst", "transport_company.rst"], "titles": ["Welcome to Transport Company\u2019s documentation!", "transport_company", "transport_company package"], "terms": {"transport_compani": 0, "packag": [0, 1], "submodul": [0, 1], "driver": [0, 1], "modul": [0, 1], "files_gener": [0, 1], "station": [0, 1], "stationnetwork": [0, 1], "structur": [0, 1], "transportcompani": [0, 1], "index": 0, "search": 0, "page": 0, "id": [1, 2], "stationnet": [1, 2], "current_st": [1, 2], "clock": [1, 2], "work_time_remain": [1, 2], "packages_deliv": [1, 2], "itinerari": [1, 2], "can_travel_anywher": [1, 2], "can_travel_to": [1, 2], "clock_print": [1, 2], "pass_tim": [1, 2], "pickup_and_travel": [1, 2], "take_packag": [1, 2], "travel_to": [1, 2], "generate_fil": [1, 2], "start_stat": [1, 2], "end_stat": [1, 2], "time_avail": [1, 2], "packages_fil": [1, 2], "add_packag": [1, 2], "create_packag": [1, 2], "get_packag": [1, 2], "station_id": [1, 2], "packages_tim": [1, 2], "available_packag": [1, 2], "distanc": [1, 2], "distance_to": [1, 2], "has_available_packag": [1, 2], "is_empti": [1, 2], "reset_packag": [1, 2], "update_packag": [1, 2], "when_next_packag": [1, 2], "will_have_available_packag": [1, 2], "stations_fil": [1, 2], "stat_list": [1, 2], "add_edg": [1, 2], "add_stat": [1, 2], "create_network": [1, 2], "get_stat": [1, 2], "num_packages_left": [1, 2], "bf": [1, 2], "clear": [1, 2], "travers": [1, 2], "dijkstra": [1, 2], "graph": [1, 2], "add_vertex": [1, 2], "get_vertex": [1, 2], "get_vertic": [1, 2], "minheap": [1, 2], "decrease_kei": [1, 2], "decrease_key_at_index": [1, 2], "extract_min": [1, 2], "heapify_down": [1, 2], "heapify_up": [1, 2], "insert_kei": [1, 2], "left_child": [1, 2], "parent": [1, 2], "peek": [1, 2], "right_child": [1, 2], "size": [1, 2], "stack": [1, 2], "pop": [1, 2], "push": [1, 2], "vertex": [1, 2], "add_neighbor": [1, 2], "get_connect": [1, 2], "get_id": [1, 2], "get_weight": [1, 2], "create_itinerari": [1, 2], "distribute_packag": [1, 2], "content": 1, "class": 2, "driver_id": 2, "str": 2, "sourc": 2, "base": 2, "object": 2, "repres": 2, "uniqu": 2, "type": 2, "instanc": 2, "live": 2, "insid": 2, "i": 2, "current": 2, "instanti": 2, "chosen": 2, "randomli": 2, "": 2, "time": 2, "set": 2, "6": 2, "00": 2, "am": 2, "datetim": 2, "timedelta": 2, "8": 2, "hour": 2, "number": 2, "deliv": 2, "int": 2, "list": 2, "subsequ": 2, "action": 2, "made": 2, "given": 2, "invok": 2, "method": 2, "all": 2, "network": 2, "stat_id": 2, "return": 2, "true": 2, "shorter": 2, "than": 2, "remain": 2, "worktim": 2, "fals": 2, "otherwis": 2, "paramet": 2, "print": 2, "hh": 2, "mm": 2, "format": 2, "minut": 2, "subtract": 2, "from": 2, "add": 2, "pass": 2, "pick": 2, "up": 2, "first": 2, "avail": 2, "travel": 2, "destin": 2, "pack": 2, "remov": 2, "taken": 2, "chang": 2, "an": 2, "appropri": 2, "amount": 2, "n_station": 2, "n_packag": 2, "file_name_st": 2, "file_name_packag": 2, "gener": 2, "two": 2, "text": 2, "file": 2, "one": 2, "contain": 2, "inform": 2, "other": 2, "station1": 2, "station2": 2, "path": 2, "package_id": 2, "singl": 2, "present": 2, "each": 2, "line": 2, "being": 2, "follow": 2, "dictionari": 2, "kei": 2, "valu": 2, "dict": 2, "creat": 2, "variabl": 2, "put": 2, "attribut": 2, "them": 2, "inpackag": 2, "us": 2, "It": 2, "inherit": 2, "properti": 2, "sort": 2, "non": 2, "decreasingli": 2, "ar": 2, "natur": 2, "how": 2, "thi": 2, "instantli": 2, "ad": 2, "check": 2, "whether": 2, "ha": 2, "ani": 2, "bool": 2, "back": 2, "pars": 2, "through": 2, "greater": 2, "equal": 2, "updat": 2, "next": 2, "have": 2, "whole": 2, "Its": 2, "basic": 2, "build": 2, "block": 2, "which": 2, "turn": 2, "thu": 2, "algorithm": 2, "also": 2, "work": 2, "about": 2, "equival": 2, "vert_list": 2, "f": 2, "t": 2, "weight": 2, "1": 2, "symmetr": 2, "overrid": 2, "connect": 2, "between": 2, "case": 2, "make": 2, "direct": 2, "initi": 2, "empti": 2, "left": 2, "g": 2, "start_kei": 2, "key_x": 2, "new_val": 2, "static": 2, "item": 2, "nbr": 2, "transport": 2, "compani": 2, "where": 2, "supplementari": 2, "manag": 2, "wtf": 2, "The": 2, "simul": 2, "while": 2, "undeliv": 2, "If": 2, "zero": 2, "less": 2, "24": 2, "thei": 2, "can": 2, "anywher": 2, "keep": 2, "take": 2, "els": 2, "calcul": 2, "wait": 2, "long": 2, "until": 2, "shortest": 2, "anoth": 2, "upon": 2, "arriv": 2, "go": 2, "need": 2, "2": 2, "onc": 2, "finish": 2, "condit": 2, "met": 2, "implemnt": 2, "its": 2, "flaw": 2, "For": 2, "possibl": 2, "loop": 2, "iter": 2, "doe": 2, "within": 2, "code": 2, "paradigm": 2, "exactli": 2, "fulli": 2, "prevent": 2, "happen": 2, "To": 2, "cope": 2, "ignor": 2, "option": 2, "argument": 2, "default": 2, "determin": 2, "write": 2, "assign": 2}, "objects": {"": [[2, 0, 0, "-", "transport_company"]], "transport_company": [[2, 0, 0, "-", "driver"], [2, 0, 0, "-", "files_generator"], [2, 0, 0, "-", "package"], [2, 0, 0, "-", "packages"], [2, 0, 0, "-", "station"], [2, 0, 0, "-", "stationnetwork"], [2, 0, 0, "-", "structures"], [2, 0, 0, "-", "transportcompany"]], "transport_company.driver": [[2, 1, 1, "", "Driver"]], "transport_company.driver.Driver": [[2, 2, 1, "", "can_travel_anywhere"], [2, 2, 1, "", "can_travel_to"], [2, 3, 1, "", "clock"], [2, 2, 1, "", "clock_print"], [2, 3, 1, "", "current_station"], [2, 3, 1, "", "id"], [2, 3, 1, "", "itinerary"], [2, 3, 1, "", "packages_delivered"], [2, 2, 1, "", "pass_time"], [2, 2, 1, "", "pickup_and_travel"], [2, 3, 1, "", "stationnet"], [2, 2, 1, "", "take_package"], [2, 2, 1, "", "travel_to"], [2, 3, 1, "", "work_time_remaining"]], "transport_company.files_generator": [[2, 4, 1, "", "generate_files"]], "transport_company.package": [[2, 1, 1, "", "Package"]], "transport_company.package.Package": [[2, 3, 1, "", "end_station"], [2, 3, 1, "", "id"], [2, 3, 1, "", "start_station"], [2, 3, 1, "", "time_available"]], "transport_company.packages": [[2, 1, 1, "", "Packages"]], "transport_company.packages.Packages": [[2, 2, 1, "", "add_package"], [2, 2, 1, "", "create_packages"], [2, 2, 1, "", "get_package"], [2, 2, 1, "", "get_packages"], [2, 3, 1, "", "packages"], [2, 3, 1, "", "packages_file"]], "transport_company.station": [[2, 1, 1, "", "Station"]], "transport_company.station.Station": [[2, 2, 1, "", "add_package"], [2, 3, 1, "", "available_packages"], [2, 2, 1, "", "distance_to"], [2, 3, 1, "", "distances"], [2, 2, 1, "", "has_available_packages"], [2, 2, 1, "", "is_empty"], [2, 3, 1, "", "packages_time"], [2, 2, 1, "", "reset_packages"], [2, 3, 1, "", "station_id"], [2, 2, 1, "", "update_packages"], [2, 2, 1, "", "when_next_package"], [2, 2, 1, "", "will_have_available_packages"]], "transport_company.stationnetwork": [[2, 1, 1, "", "StationNetwork"]], "transport_company.stationnetwork.StationNetwork": [[2, 2, 1, "", "add_edge"], [2, 2, 1, "", "add_station"], [2, 2, 1, "", "create_network"], [2, 2, 1, "", "get_station"], [2, 2, 1, "", "get_stations"], [2, 2, 1, "", "is_empty"], [2, 2, 1, "", "num_packages_left"], [2, 2, 1, "", "reset_packages"], [2, 3, 1, "", "stat_list"], [2, 3, 1, "", "stations_file"], [2, 2, 1, "", "update_packages"]], "transport_company.structures": [[2, 1, 1, "", "BFS"], [2, 1, 1, "", "Dijkstra"], [2, 1, 1, "", "Graph"], [2, 1, 1, "", "MinHeap"], [2, 1, 1, "", "Stack"], [2, 1, 1, "", "Vertex"]], "transport_company.structures.BFS": [[2, 2, 1, "", "bfs"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "traverse"]], "transport_company.structures.Dijkstra": [[2, 2, 1, "", "clear"], [2, 2, 1, "", "dijkstra"]], "transport_company.structures.Graph": [[2, 2, 1, "", "add_edge"], [2, 2, 1, "", "add_vertex"], [2, 2, 1, "", "get_vertex"], [2, 2, 1, "", "get_vertices"]], "transport_company.structures.MinHeap": [[2, 2, 1, "", "decrease_key"], [2, 2, 1, "", "decrease_key_at_index"], [2, 2, 1, "", "extract_min"], [2, 2, 1, "", "heapify_down"], [2, 2, 1, "", "heapify_up"], [2, 2, 1, "", "insert_key"], [2, 2, 1, "", "is_empty"], [2, 2, 1, "", "left_child"], [2, 2, 1, "", "parent"], [2, 2, 1, "", "peek"], [2, 2, 1, "", "right_child"], [2, 2, 1, "", "size"]], "transport_company.structures.Stack": [[2, 2, 1, "", "is_empty"], [2, 2, 1, "", "peek"], [2, 2, 1, "", "pop"], [2, 2, 1, "", "push"], [2, 2, 1, "", "size"]], "transport_company.structures.Vertex": [[2, 2, 1, "", "add_neighbor"], [2, 2, 1, "", "get_connections"], [2, 2, 1, "", "get_id"], [2, 2, 1, "", "get_weight"]], "transport_company.transportcompany": [[2, 1, 1, "", "TransportCompany"]], "transport_company.transportcompany.TransportCompany": [[2, 2, 1, "", "create_itineraries"], [2, 2, 1, "", "distribute_packages"], [2, 3, 1, "", "packages"], [2, 3, 1, "", "stationnet"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "transport": 0, "compani": 0, "": 0, "document": 0, "content": [0, 2], "indic": 0, "tabl": 0, "transport_compani": [1, 2], "packag": 2, "submodul": 2, "driver": 2, "modul": 2, "files_gener": 2, "station": 2, "stationnetwork": 2, "structur": 2, "transportcompani": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to Transport Company\u2019s documentation!": [[0, "welcome-to-transport-company-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "transport_company": [[1, "transport-company"]], "transport_company package": [[2, "transport-company-package"]], "Submodules": [[2, "submodules"]], "transport_company.driver module": [[2, "module-transport_company.driver"]], "transport_company.files_generator module": [[2, "module-transport_company.files_generator"]], "transport_company.package module": [[2, "module-transport_company.package"]], "transport_company.packages module": [[2, "module-transport_company.packages"]], "transport_company.station module": [[2, "module-transport_company.station"]], "transport_company.stationnetwork module": [[2, "module-transport_company.stationnetwork"]], "transport_company.structures module": [[2, "module-transport_company.structures"]], "transport_company.transportcompany module": [[2, "module-transport_company.transportcompany"]], "Module contents": [[2, "module-transport_company"]]}, "indexentries": {"bfs (class in transport_company.structures)": [[2, "transport_company.structures.BFS"]], "dijkstra (class in transport_company.structures)": [[2, "transport_company.structures.Dijkstra"]], "driver (class in transport_company.driver)": [[2, "transport_company.driver.Driver"]], "graph (class in transport_company.structures)": [[2, "transport_company.structures.Graph"]], "minheap (class in transport_company.structures)": [[2, "transport_company.structures.MinHeap"]], "package (class in transport_company.package)": [[2, "transport_company.package.Package"]], "packages (class in transport_company.packages)": [[2, "transport_company.packages.Packages"]], "stack (class in transport_company.structures)": [[2, "transport_company.structures.Stack"]], "station (class in transport_company.station)": [[2, "transport_company.station.Station"]], "stationnetwork (class in transport_company.stationnetwork)": [[2, "transport_company.stationnetwork.StationNetwork"]], "transportcompany (class in transport_company.transportcompany)": [[2, "transport_company.transportcompany.TransportCompany"]], "vertex (class in transport_company.structures)": [[2, "transport_company.structures.Vertex"]], "add_edge() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.add_edge"]], "add_edge() (transport_company.structures.graph method)": [[2, "transport_company.structures.Graph.add_edge"]], "add_neighbor() (transport_company.structures.vertex method)": [[2, "transport_company.structures.Vertex.add_neighbor"]], "add_package() (transport_company.packages.packages method)": [[2, "transport_company.packages.Packages.add_package"]], "add_package() (transport_company.station.station method)": [[2, "transport_company.station.Station.add_package"]], "add_station() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.add_station"]], "add_vertex() (transport_company.structures.graph method)": [[2, "transport_company.structures.Graph.add_vertex"]], "available_packages (transport_company.station.station attribute)": [[2, "transport_company.station.Station.available_packages"]], "bfs() (transport_company.structures.bfs method)": [[2, "transport_company.structures.BFS.bfs"]], "can_travel_anywhere() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.can_travel_anywhere"]], "can_travel_to() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.can_travel_to"]], "clear() (transport_company.structures.bfs method)": [[2, "transport_company.structures.BFS.clear"]], "clear() (transport_company.structures.dijkstra method)": [[2, "transport_company.structures.Dijkstra.clear"]], "clock (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.clock"]], "clock_print() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.clock_print"]], "create_itineraries() (transport_company.transportcompany.transportcompany method)": [[2, "transport_company.transportcompany.TransportCompany.create_itineraries"]], "create_network() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.create_network"]], "create_packages() (transport_company.packages.packages method)": [[2, "transport_company.packages.Packages.create_packages"]], "current_station (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.current_station"]], "decrease_key() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.decrease_key"]], "decrease_key_at_index() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.decrease_key_at_index"]], "dijkstra() (transport_company.structures.dijkstra method)": [[2, "transport_company.structures.Dijkstra.dijkstra"]], "distance_to() (transport_company.station.station method)": [[2, "transport_company.station.Station.distance_to"]], "distances (transport_company.station.station attribute)": [[2, "transport_company.station.Station.distances"]], "distribute_packages() (transport_company.transportcompany.transportcompany method)": [[2, "transport_company.transportcompany.TransportCompany.distribute_packages"]], "end_station (transport_company.package.package attribute)": [[2, "transport_company.package.Package.end_station"]], "extract_min() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.extract_min"]], "generate_files() (in module transport_company.files_generator)": [[2, "transport_company.files_generator.generate_files"]], "get_connections() (transport_company.structures.vertex method)": [[2, "transport_company.structures.Vertex.get_connections"]], "get_id() (transport_company.structures.vertex method)": [[2, "transport_company.structures.Vertex.get_id"]], "get_package() (transport_company.packages.packages method)": [[2, "transport_company.packages.Packages.get_package"]], "get_packages() (transport_company.packages.packages method)": [[2, "transport_company.packages.Packages.get_packages"]], "get_station() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.get_station"]], "get_stations() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.get_stations"]], "get_vertex() (transport_company.structures.graph method)": [[2, "transport_company.structures.Graph.get_vertex"]], "get_vertices() (transport_company.structures.graph method)": [[2, "transport_company.structures.Graph.get_vertices"]], "get_weight() (transport_company.structures.vertex method)": [[2, "transport_company.structures.Vertex.get_weight"]], "has_available_packages() (transport_company.station.station method)": [[2, "transport_company.station.Station.has_available_packages"]], "heapify_down() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.heapify_down"]], "heapify_up() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.heapify_up"]], "id (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.id"]], "id (transport_company.package.package attribute)": [[2, "transport_company.package.Package.id"]], "insert_key() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.insert_key"]], "is_empty() (transport_company.station.station method)": [[2, "transport_company.station.Station.is_empty"]], "is_empty() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.is_empty"]], "is_empty() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.is_empty"]], "is_empty() (transport_company.structures.stack method)": [[2, "transport_company.structures.Stack.is_empty"]], "itinerary (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.itinerary"]], "left_child() (transport_company.structures.minheap static method)": [[2, "transport_company.structures.MinHeap.left_child"]], "module": [[2, "module-transport_company"], [2, "module-transport_company.driver"], [2, "module-transport_company.files_generator"], [2, "module-transport_company.package"], [2, "module-transport_company.packages"], [2, "module-transport_company.station"], [2, "module-transport_company.stationnetwork"], [2, "module-transport_company.structures"], [2, "module-transport_company.transportcompany"]], "num_packages_left() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.num_packages_left"]], "packages (transport_company.packages.packages attribute)": [[2, "transport_company.packages.Packages.packages"]], "packages (transport_company.transportcompany.transportcompany attribute)": [[2, "transport_company.transportcompany.TransportCompany.packages"]], "packages_delivered (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.packages_delivered"]], "packages_file (transport_company.packages.packages attribute)": [[2, "transport_company.packages.Packages.packages_file"]], "packages_time (transport_company.station.station attribute)": [[2, "transport_company.station.Station.packages_time"]], "parent() (transport_company.structures.minheap static method)": [[2, "transport_company.structures.MinHeap.parent"]], "pass_time() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.pass_time"]], "peek() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.peek"]], "peek() (transport_company.structures.stack method)": [[2, "transport_company.structures.Stack.peek"]], "pickup_and_travel() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.pickup_and_travel"]], "pop() (transport_company.structures.stack method)": [[2, "transport_company.structures.Stack.pop"]], "push() (transport_company.structures.stack method)": [[2, "transport_company.structures.Stack.push"]], "reset_packages() (transport_company.station.station method)": [[2, "transport_company.station.Station.reset_packages"]], "reset_packages() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.reset_packages"]], "right_child() (transport_company.structures.minheap static method)": [[2, "transport_company.structures.MinHeap.right_child"]], "size() (transport_company.structures.minheap method)": [[2, "transport_company.structures.MinHeap.size"]], "size() (transport_company.structures.stack method)": [[2, "transport_company.structures.Stack.size"]], "start_station (transport_company.package.package attribute)": [[2, "transport_company.package.Package.start_station"]], "stat_list (transport_company.stationnetwork.stationnetwork attribute)": [[2, "transport_company.stationnetwork.StationNetwork.stat_list"]], "station_id (transport_company.station.station attribute)": [[2, "transport_company.station.Station.station_id"]], "stationnet (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.stationnet"]], "stationnet (transport_company.transportcompany.transportcompany attribute)": [[2, "transport_company.transportcompany.TransportCompany.stationnet"]], "stations_file (transport_company.stationnetwork.stationnetwork attribute)": [[2, "transport_company.stationnetwork.StationNetwork.stations_file"]], "take_package() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.take_package"]], "time_available (transport_company.package.package attribute)": [[2, "transport_company.package.Package.time_available"]], "transport_company": [[2, "module-transport_company"]], "transport_company.driver": [[2, "module-transport_company.driver"]], "transport_company.files_generator": [[2, "module-transport_company.files_generator"]], "transport_company.package": [[2, "module-transport_company.package"]], "transport_company.packages": [[2, "module-transport_company.packages"]], "transport_company.station": [[2, "module-transport_company.station"]], "transport_company.stationnetwork": [[2, "module-transport_company.stationnetwork"]], "transport_company.structures": [[2, "module-transport_company.structures"]], "transport_company.transportcompany": [[2, "module-transport_company.transportcompany"]], "travel_to() (transport_company.driver.driver method)": [[2, "transport_company.driver.Driver.travel_to"]], "traverse() (transport_company.structures.bfs method)": [[2, "transport_company.structures.BFS.traverse"]], "update_packages() (transport_company.station.station method)": [[2, "transport_company.station.Station.update_packages"]], "update_packages() (transport_company.stationnetwork.stationnetwork method)": [[2, "transport_company.stationnetwork.StationNetwork.update_packages"]], "when_next_package() (transport_company.station.station method)": [[2, "transport_company.station.Station.when_next_package"]], "will_have_available_packages() (transport_company.station.station method)": [[2, "transport_company.station.Station.will_have_available_packages"]], "work_time_remaining (transport_company.driver.driver attribute)": [[2, "transport_company.driver.Driver.work_time_remaining"]]}})